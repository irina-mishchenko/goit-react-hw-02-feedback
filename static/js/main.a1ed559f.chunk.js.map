{"version":3,"sources":["Components/Notification/Notification.module.css","Components/Statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.js","Components/Notification/Notification.js","Components/App.js","index.js","Components/Statistics/Statistics.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Section/Section.module.css"],"names":["module","exports","Statictics","good","neutral","bad","total","positivePercentage","className","s","statisticsItem","FeedbackOptions","onLeaveFeedback","button","type","data-name","onClick","Section","title","children","container","Notification","message","text","App","state","name","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","isShowStatistics","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,KAAO,6B,uICyBVC,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,oCACE,oBAAGC,UAAWC,IAAEC,eAAhB,mBAAuCP,KACvC,oBAAGK,UAAWC,IAAEC,eAAhB,sBAA0CN,KAC1C,oBAAGI,UAAWC,IAAEC,eAAhB,kBAAsCL,KACtC,oBAAGG,UAAWC,IAAEC,eAAhB,oBAAwCJ,KACxC,oBAAGE,UAAWC,IAAEC,eAAhB,gCACsBH,EADtB,W,gBCsBSI,EA/BS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,gCACE,wBACEJ,UAAWC,IAAEI,OACbC,KAAK,SACLC,YAAU,OACVC,QAASJ,EAJX,kBAQA,wBACEJ,UAAWC,IAAEI,OACbC,KAAK,SACLC,YAAU,UACVC,QAASJ,EAJX,qBAQA,wBACEJ,UAAWC,IAAEI,OACbC,KAAK,SACLC,YAAU,MACVC,QAASJ,EAJX,qB,gBCJSK,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASX,UAAWC,IAAEW,UAAtB,UACE,oBAAIZ,UAAWC,IAAES,MAAjB,SAAyBA,IACxBC,M,iBCIQE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGd,UAAWC,IAAEc,KAAhB,SAAuBD,KC2DjBE,E,4MAzDbC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,G,EAGtBK,gBAAkB,YAAiB,IAC3Bc,EAD0B,EAAbC,OACCC,QAAQF,KAC5B,EAAKG,UAAS,SAAAC,GAAS,sBACpBJ,EAAOI,EAAUJ,GAAQ,MAE5B,EAAKK,qBACL,EAAKC,mC,EAGPD,mBAAqB,WACnB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BxB,MAAOwB,EAAUxB,MAAQ,O,EAI7B0B,gCAAkC,WAChC,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BvB,mBAAoB0B,KAAKC,MAAOJ,EAAU3B,KAAO2B,EAAUxB,MAAS,U,uDAI9D,IAAD,EACmD6B,KAAKV,MAAvDtB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAAKC,EADrB,EACqBA,MAAOC,EAD5B,EAC4BA,mBAC7B6B,EAAmBD,KAAKV,MAAMnB,MAAQ,EAE5C,OACE,gCACE,cAAC,EAAD,CAASY,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBN,gBAAiBuB,KAAKvB,oBAGzC,cAAC,EAAD,CAASM,MAAM,aAAf,SACGkB,EACC,cAAC,EAAD,CACEjC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAce,QAAQ,+B,GAlDhBe,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1B1C,EAAOC,QAAU,CAAC,eAAiB,qC,kBCAnCD,EAAOC,QAAU,CAAC,OAAS,kC,kBCA3BD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,0B","file":"static/js/main.a1ed559f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__3izBy\"};","import propTypes from 'prop-types';\n\nimport s from './Statistics.module.css';\n\nconst Statictics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <section>\n      <p className={s.statisticsItem}>Good: {good}</p>\n      <p className={s.statisticsItem}>Neutral: {neutral}</p>\n      <p className={s.statisticsItem}>Bad: {bad}</p>\n      <p className={s.statisticsItem}>Total: {total}</p>\n      <p className={s.statisticsItem}>\n        Positive feedback: {positivePercentage}%\n      </p>\n    </section>\n  );\n};\n\nStatictics.propTypes = {\n  good: propTypes.string,\n  neutral: propTypes.string,\n  bad: propTypes.string,\n  total: propTypes.string,\n  positivePercentage: propTypes.string,\n};\n\nexport default Statictics;\n","import s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\n  return (\n    <div>\n      <button\n        className={s.button}\n        type=\"button\"\n        data-name=\"good\"\n        onClick={onLeaveFeedback}\n      >\n        Good\n      </button>\n      <button\n        className={s.button}\n        type=\"button\"\n        data-name=\"neutral\"\n        onClick={onLeaveFeedback}\n      >\n        Neutral\n      </button>\n      <button\n        className={s.button}\n        type=\"button\"\n        data-name=\"bad\"\n        onClick={onLeaveFeedback}\n      >\n        Bad\n      </button>\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n","import propTypes from 'prop-types';\n\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.container}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: propTypes.string,\n};\n\nexport default Section;\n","import propTypes from 'prop-types';\n\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={s.text}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: propTypes.string,\n};\n\nexport default Notification;\n","import { Component } from 'react';\nimport Statictics from './Statistics/Statistics';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Section from './Section/Section';\nimport Notification from './Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    positivePercentage: 0,\n  };\n\n  onLeaveFeedback = ({ target }) => {\n    const name = target.dataset.name;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n    this.countTotalFeedback();\n    this.countPositiveFeedbackPercentage();\n  };\n\n  countTotalFeedback = () => {\n    this.setState(prevState => ({\n      total: prevState.total + 1,\n    }));\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    this.setState(prevState => ({\n      positivePercentage: Math.round((prevState.good / prevState.total) * 100),\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.state;\n    const isShowStatistics = this.state.total > 0;\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {isShowStatistics ? (\n            <Statictics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsItem\":\"Statistics_statisticsItem__GVMvN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__A8dFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__2nwJN\",\"title\":\"Section_title__1FCLs\"};"],"sourceRoot":""}